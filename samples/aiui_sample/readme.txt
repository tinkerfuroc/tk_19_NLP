1. 编译:linux 64:source 64bit_make.shlinux 32:source 32bit_make.sh 2. 运行cd build./demo （输入的命令请查看AIUITest.cpp中readCmd（）函数）Note:1、 demo主要包含文本语义，语音语义，动态上传资源的示例，建议开发者结合官网的AIUI文档http://aiui.xfyun.cn/docs/access_docs查看示例代码如果不想使用ivw唤醒的开发者忽略以下说明2、 AIUI SDK已经集成了原msc里面的ivw唤醒功能，如果想要打开AIUI的IVW唤醒，按以下步骤操作：	1）首先从官网下载好（或是别的途径获取到）支持唤醒的SDK，目前官网的是60版本，建议使用的也是60版本唤醒，将下载好的唤醒库libmsc.so放在libs/x64(x86)目录下替换原来的文件，唤醒资源文件保存到aiui_sample/build/AIUI/ivw目录下，该路径可配置，如果放在其它地方，参考aiui.cfg中ivw->res_path项配置即可；		2）在aiui.cfg中，将“speech”下的参数“wakeup_mode”的值由“off”改为“ivw”，如：			"speech":{			"data_source":"user",			"wakeup_mode":"ivw",			"intent_engine_type":"cloud"		}, 			3) 完成上面两步后，aiui sdk就会去调用libmsc.so里面的唤醒功能，需要注意的一点是，使用唤醒之前，需要开发者自行调用MSPLogin()进行登录，可以参考AIUITest.cpp文件中createAgent()接口中注释的那部分代码		4） 需要注意的一点是，由于唤醒资源与appid绑定，所以下载唤醒资源时，建议使用与下载aiui sdk相同的应用，如果不是，那么在调用MSPLogin（）时，就需要传入下载唤醒资源的那个appid，请仔细看AIUITest.cpp中createAgent()里面注释掉的那部分代码。3、5.5.1036.0001之后的版本新增合成单测试用例startTts(),pauseTts()等，并且对如何获取返回的tts音频提供了参考代码，保存为程序执行目录下的tts.pcm文件，开发者可通过播放器软件播放该文件测试效果。